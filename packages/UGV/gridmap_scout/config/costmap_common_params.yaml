#This file contains common configuration options for the two costmaps used in the navigation stack for more details on the parameters in this file, and a full list of the parameters used by the costmaps, please see http://www.ros.org/wiki/costmap_2d

#For this example we'll configure the costmap in voxel-grid mode
map_type: costmap

global_frame: map
robot_base_frame: base_link


#Set the tolerance we're willing to have for tf transforms
transform_tolerance: 1.0
# obstacle_range: 3.5
# raytrace_range: 4.0

footprint: [[-0.127, -0.127], [-0.18, 0.0], [-0.127, 0.127], [0.0, 0.18], [0.127, 0.127], [0.18, 0.0], [0.127, -0.127], [0.0, -0.18]]


footprint_padding: 0.5  # 0.03


# Cost function parameters
# inflation_radius: 0.6
# cost_scaling_factor: 10.0

#The cost at which a cell is considered an obstacle when a map is read from the map_server
# lethal_cost_threshold: 60

static_layer:
  map_topic: "map"
  subscribe_to_updates: false # 更新地图话题为map_topic + “_updates”,类型为map_msgs/OccupancyGridUpdate
  track_unknown_space: true  #设定为true,则路线规划会避开unknown区域
  lethal_cost_threshold: 50
  first_map_only: false

  

inflation_layer:
  inflation_radius: 1.0
  cost_scaling_factor: 12

#Configuration for the sensors that the costmap will use to update a map
# observation_sources: laser_scan_sensor
# laser_scan_sensor: {sensor_frame: base_laser_link, data_type: LaserScan, topic: /base_scan, marking: true, clearing: true, max_obstacle_height: 20.0, min_obstacle_height: 0.0}

# observation_sources: point_cloud_sensor
# point_cloud_sensor: {
#   sensor_frame: /base_link,   # /camera_depth_optical_frame, 
#   data_type: PointCloud2, 
#   topic: /robot_base/points,   # /camera/depth/points, 
#   marking: true, 
#   clearing: true,
#   max_obstacle_height: 100.0,
#   min_obstacle_height: -100.0,
#   obstacle_range: 3,
#   raytrace_range: 3
#   }